#/bin/bash

### This file contains four sections:
    # Global config variables.
    # Calculated global values.
    # Helper functions.
    # Main script code.

function abort () { echo "Error: $*, aborting."; exit 1; }


### Global config variables.

SRC_DIR="/data/genericrhel6/src/dynamicua.cdn.mozilla.net"
[[ -d "$SRC_DIR" ]] || abort "SRC_DIR '${SRC_DIR}' is not a directory"

# For each update path, we craft a URL:
#   <file_url_prefix>/<app_specific_path>/<file_url_filename>
#
# The prefix and filename are set globally.
#
FILE_URL_PREFIX="https://hg.mozilla.org/mozilla-central/raw-file/tip"
FILE_URL_FILENAME="ua-update.json.in"


### Calculated global values.

CODE_DIR="${SRC_DIR}/dynamicua"
[[ -d "$CODE_DIR" ]] || abort "CODE_DIR '${CODE_DIR}' is not a directory"

VERSION=$(cat "${SRC_DIR}/version.txt")
[[ -n "$VERSION" ]] || abort "unable to load VERSION from '${SRC_DIR}/version.txt'"
VERSION_DIR=$CODE_DIR/$VERSION

if [[ ! -d $VERSION_DIR ]]
then
    mkdir $VERSION_DIR || abort "unable to mkdir VERSION_DIR '${VERSION_DIR}'"
fi

# triggers a deploy when set to 'yes' by any call to update_b2g().
NEED_TO_DEPLOY='no'


### Helper functions.

function get_latest_revision () {
    [[ -n "$1" ]] || abort "url not provided to get_latest_revision"
    curl -s "$1" | grep -A1 '<td>changeset' | awk -F '[">]' '{print $9}' | awk -F '[</a]' '{print $1}' | grep -v '^$'
}

function checkretval(){
    retval=$?
    if [[ $retval -gt 0 ]]; then
        echo "Error!!! Exit status of the last command was $retval"
        exit $retval
    fi
}

function update_b2g () {

B2G_APP_NAME="$1"
[[ -n "$B2G_APP_NAME" ]] || abort "APP_NAME not provided to function update_b2g"
B2G_SOURCE_PATH="$2"
[[ -n "$B2G_SOURCE_PATH" ]] || abort "SOURCE_PATH not provided to function update_b2g"
B2G_APP_ID="$3"
[[ -n "$B2G_APP_ID" ]] || abort "APP_GUID not provided to function update_b2g"

B2G_SOURCE_URL="${FILE_URL_PREFIX}/${B2G_SOURCE_PATH}/${FILE_URL_FILENAME}"

B2G_REVISION_FILE="${CODE_DIR}/${B2G_APP_NAME}_revision.txt"

B2G_LATEST_REVISION=$( get_latest_revision "${B2G_SOURCE_URL/raw-file/file}" )
[[ -n "$B2G_LATEST_REVISION" ]] || abort "unable to fetch B2G_LATEST_REVISION from '${B2G_SOURCE_URL/raw-file/file}'"

B2G_OUTPUT_FILE="${VERSION_DIR}/${B2G_APP_ID}"

B2G_DEPLOYED_REVISION="$(cat $B2G_REVISION_FILE)"

if [[ "$B2G_DEPLOYED_REVISION" == "$B2G_LATEST_REVISION" ]]
then
    return 0
fi

# get file from Mercurial
curl -s $B2G_SOURCE_URL -o $B2G_OUTPUT_FILE
checkretval

# remove JS comments from file
sed -i 's/\/\/.*$//g' $B2G_OUTPUT_FILE
checkretval

# verify we have valid json before pushing
cat $B2G_OUTPUT_FILE | json_verify > /dev/null
checkretval

# update the current revision on disk
echo "$B2G_LATEST_REVISION" > $B2G_REVISION_FILE

# inform the script that we need to do a deploy
NEED_TO_DEPLOY='yes'

}


### Main script code.

# update the b2g files on disk
update_b2g "b2g" "b2g/app" "{3c2e2abc-06d4-11e1-ac3b-374f68613e61}"

# deploy, if necessary
if [[ "$NEED_TO_DEPLOY" == 'yes' ]]
then
    #deploy the code
    /data/genericrhel6/deploy dynamicua.cdn.mozilla.net
fi
